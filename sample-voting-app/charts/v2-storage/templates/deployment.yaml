{{ if eq .Release.Name .Values.deploymentName}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deploymentName }}
  annotations: 
    container.apparmor.security.beta.kubernetes.io/v2-storage: runtime/default
  #https://kubernetes.io/docs/tutorials/clusters/apparmor/
  labels:
    app: {{ .Values.deploymentName }}
    chart: "{{ .Values.deploymentName }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.deploymentName }}
  template:
    metadata:
      annotations: 
      {{ if (eq .Values.K8S.Type "AKS")  }}
        container.apparmor.security.beta.kubernetes.io/v2-storage: runtime/default
        seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
      {{ end }}
      #https://kubernetes.io/docs/tutorials/clusters/apparmor/
      #EKS is having issues as it doesnt set app armor by default

      labels:
        app: {{ .Values.deploymentName }}
        chart: "{{ .Values.deploymentName }}-{{ .Chart.Version | replace "+" "_" }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"        
    spec:
      automountServiceAccountToken: false  
      nodeSelector:  
      {{ if (eq .Values.K8S.Type "AKS")  }}
        agentpool: {{ .Values.nodePoolName }} 
      imagePullSecrets:
        - name: acr-secret
      {{ end }}
      #for AKS, this has to be agentpool -- k get nodes --show-labels to see actual cloud provider values
      {{ if (eq .Values.K8S.Type "EKS")  }}
        eks.amazonaws.com/nodegroup: {{ .Values.nodePoolName }} 
      imagePullSecrets:
        - name: acr-secret
      {{ end }}
      #for EKS, this has to be eks.amazonaws.com/nodegroup -- k get nodes --show-labels to see actual cloud provider values
      tolerations:
      - key: "kubernetes.azure.com/scalesetpriority"
        value: "spot"
        operator: "Equal"
        effect: "NoSchedule"      
      containers:
      - name: {{ .Values.deploymentName }}
        image: "{{ .Values.image.repository }}{{ .Values.deploymentName }}:{{ .Values.buildID }}"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          privileged: false
          readOnlyRootFilesystem: false
          #runAsUser: 1000
          runAsGroup: 1000
        args: ["--ignore-db-dir=lost+found"]
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          limits:
            memory: {{ .Values.resourceLimits.memory.limits }}
            cpu: {{ .Values.resourceLimits.cpu.limits }}
          requests:
            memory: {{ .Values.resourceLimits.memory.requests }}
            cpu: {{ .Values.resourceLimits.cpu.requests }}
        volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-storage
        ports:
          - containerPort: {{ .Values.containerPort }}
            name: mysql
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: voting-storage-secret
                key: MYSQL_ROOT_PASSWORD
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: voting-storage-secret
                key: MYSQL_USER
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: voting-storage-secret
                key: MYSQL_PASSWORD
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: voting-storage-secret
                key: MYSQL_DATABASE
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
        
{{ end }}

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Values.deploymentName }}-hpa
spec:
  maxReplicas: {{ .Values.hpa.dev.maxReplicas }} # define max replica count
  minReplicas: {{ .Values.hpa.dev.minReplicas }}  # define min replica count -- max 20 with 2 nodes b2stype
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Values.deploymentName }}
  targetCPUUtilizationPercentage: 50 # target CPU utilization
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---      