---
apiVersion: v1
kind: Namespace
metadata:
  name: kubei
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubei
  namespace: kubei
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubei
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["create","delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubei
subjects:
- kind: ServiceAccount
  name: kubei
  namespace: kubei
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubei
---
apiVersion: v1
kind: Service
metadata:
  name: clair
  namespace: kubei
  labels:
    app: clair
spec:
  type: ClusterIP
  ports:
  - port: 6060
    protocol: TCP
    name: apiserver
  - port: 6061
    protocol: TCP
    name: health
  selector:
    app: clair
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clair
  namespace: kubei
  labels:
    app: clair
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clair
  template:
    metadata:
      labels:
        app: clair
        kubeiShouldScan: "false"
    spec:
      initContainers:
      - name: check-db-ready
        image: postgres:12-alpine
        command: ['sh', '-c',  'until pg_isready -h postgres -p 5432;  do echo waiting for database; sleep 2; done;']
      containers:
      - name: clair
        image: gcr.io/portshift-release/clair/clair-local-scan
        imagePullPolicy: Always
        ports:
        - containerPort: 6060
        - containerPort: 6061
        resources:
          limits:
            cpu: 2000m
            memory: 6G
          requests:
            cpu: 700m
            memory: 3G
# uncomment the following lines in case Kubei is running behind proxy. update PROXY_IP & PROXY_PORT according to your proxy settings
#        env:
#        - name: HTTPS_PROXY
#          value: "{ PROXY_IP }:{ PROXY_PORT }"
#        - name: HTTP_PROXY
#          value: "{ PROXY_IP }:{ PROXY_PORT }"
#        - name: NO_PROXY
#          value: "postgres"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
  name: postgres
  namespace: kubei
spec:
  type: ClusterIP
  ports:
    - name: db
      port: 5432
      protocol: TCP
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clair-postgres
  namespace: kubei
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        kubeiShouldScan: "false"
    spec:
      containers:
      - name: clair-db  
        image: gcr.io/portshift-release/clair/clair-db
        imagePullPolicy: Always
        ports:
        - containerPort: 5432
        resources:
          limits:
            cpu: 1500m
            memory: 1G
          requests:
            cpu: 500m
            memory: 400Mi
---
apiVersion: v1
kind: Service
metadata:
  namespace: kubei
  name: kubei
  labels:
    app: kubei
spec:
  type: ClusterIP
  ports:
  - port: 8080
    protocol: TCP
    name: http-webapp
  - port: 8081
    protocol: TCP
    name: http-klar-result
  selector:
    app: kubei
  type: NodePort
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubei
  namespace: kubei
  labels:
    app: kubei
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubei
  template:
    metadata:
      labels:
        app: kubei
        kubeiShouldScan: "false"
    spec:
      serviceAccountName: kubei
      initContainers:
      - name: init-clairsvc
        image: yauritux/busybox-curl
        args:
          - /bin/sh
          - -c
          - >
            set -x;
            while [ $(curl -sw '%{http_code}' "http://clair.kubei:6060/v1/namespaces" -o /dev/null) -ne 200 ]; do
              echo "waiting for clair to be ready";
              sleep 15;
            done
      containers:
      - name: kubei
        image: gcr.io/development-infra-208909/kubei:1.0.7
        imagePullPolicy: Always
        env:
        - name: "KLAR_IMAGE_NAME"
          value: "gcr.io/development-infra-208909/klar:1.0.5"
        - name: "MAX_PARALLELISM" # max number of scans that will run simultaneously. defaults to 10
          value: "10"
        - name: "TARGET_NAMESPACE" # empty = scan all namespaces
          value: ""
        - name: "SEVERITY_THRESHOLD" # minimum level of vulnerability to report. defaults to MEDIUM
          value: "MEDIUM"
        - name: "IGNORE_NAMESPACES" # a list of namespaces to ignore. defaults no namespace to ignore
          value: "istio-system,kube-system"
        - name: "DELETE_JOB_POLICY"
          value: "Successful"
# uncomment the following lines in case Kubei is running behind proxy. update PROXY_IP & PROXY_PORT according to your proxy settings
#        - name: SCANNER_HTTPS_PROXY
#          value: "{ PROXY_IP }:{ PROXY_PORT }"
#        - name: SCANNER_HTTP_PROXY
#          value: "{ PROXY_IP }:{ PROXY_PORT }"
        ports:
        - containerPort: 8080
        - containerPort: 8081
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 20Mi
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kubei-ingress
  namespace: kubei
  annotations:
    kubernetes.io/ingress.class: nginx   
spec:
    rules:
    - host: kubei-dev.cloudkube.xyz
      http:
        paths:
        - backend:
            serviceName: kubei
            servicePort: 8080
---            